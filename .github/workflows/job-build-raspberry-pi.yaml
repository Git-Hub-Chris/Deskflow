name: Build Raspberry Pi

on:
  push:
    branches: [ master ]

jobs:
  build-on-pi:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: [self-hosted, linux, ARM, pi-3]
            name: raspios-pi-3
            build-options: parallel=1
          - os: [self-hosted, linux, ARM64, pi-4]
            name: raspios-pi-4
            build-options: ''
    env:
      GIT_COMMIT: ${{ github.sha }}
      DEB_BUILD_OPTIONS: ${{ matrix.build-options }}

    steps:
    - uses: actions/checkout@v2

    - name: Version Info
      id: version
      run: |
        command -v python3 >/dev/null 2>&1 && python3 CI/build_version.py || python CI/build_version.py
        mkdir -p version-info; cd version-info
        cmake ..
        cd ..
        . ./version-info/version
        SYNERGY_VERSION="$SYNERGY_VERSION_MAJOR.$SYNERGY_VERSION_MINOR.$SYNERGY_VERSION_PATCH"
        SYNERGY_REVISION=`git rev-parse --short=8 HEAD`
        SYNERGY_DEB_VERSION="${SYNERGY_VERSION}.${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}"
        echo "::set-output name=SYNERGY_VERSION_MAJOR::${SYNERGY_VERSION_MAJOR}"
        echo "::set-output name=SYNERGY_VERSION_MINOR::${SYNERGY_VERSION_MINOR}"
        echo "::set-output name=SYNERGY_VERSION_PATCH::${SYNERGY_VERSION_PATCH}"
        echo "::set-output name=SYNERGY_VERSION_STAGE::${SYNERGY_VERSION_STAGE}"
        echo "::set-output name=SYNERGY_VERSION_BUILD::${SYNERGY_VERSION_BUILD}"
        echo "::set-output name=SYNERGY_VERSION::${SYNERGY_VERSION}"
        echo "::set-output name=SYNERGY_REVISION::${SYNERGY_REVISION}"
        echo "::set-output name=SYNERGY_DEB_VERSION::${SYNERGY_DEB_VERSION}"
        echo "::set-output name=SYNERGY_REMOTE_FOLDER::synergy-core/v1-core-standard/${SYNERGY_VERSION}/${SYNERGY_VERSION_STAGE}/b${SYNERGY_VERSION_BUILD}-${SYNERGY_REVISION}"
        rm -rf version-info

    - name: Build deb
      env:
        SYNERGY_VERSION: ${{ steps.version.outputs.SYNERGY_VERSION }}
        SYNERGY_REVISION: ${{ steps.version.outputs.SYNERGY_REVISION }}
        SYNERGY_DEB_VERSION: ${{ steps.version.outputs.SYNERGY_DEB_VERSION }}
      run: |
        dch --create --package "synergy" --controlmaint --distribution unstable --newversion $SYNERGY_DEB_VERSION "Initial release"
        export GPG_TTY=$(tty)
        debuild --preserve-envvar SYNERGY_* --preserve-envvar GIT_COMMIT -us -uc
        mkdir -p standard_package
        cd ..
        filename=$(ls synergy_*${SYNERGY_REVISION}*.deb)
        filename_new="synergy_${SYNERGY_VERSION}-${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}_raspios${filename##*${SYNERGY_REVISION}}"
        mv $filename ${{ github.workspace }}/standard_package/$filename_new
        cd ${{ github.workspace }}/standard_package
        md5sum $filename_new >> ${filename_new}.checksum.txt
        sha1sum $filename_new >> ${filename_new}.checksum.txt
        sha256sum $filename_new >> ${filename_new}.checksum.txt

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.name }}
        path: ./standard_package

    - name: Send standard package to sandor
      uses: horochx/deploy-via-scp@master
      with:
        host: ${{ secrets.SANDOR_HOST }}
        user: ${{ secrets.SANDOR_USERNAME }}
        key: ${{ secrets.SANDOR_KEY }}
        local: "./standard_package/*"
        remote: "${{ steps.version.outputs.SYNERGY_REMOTE_FOLDER }}"
