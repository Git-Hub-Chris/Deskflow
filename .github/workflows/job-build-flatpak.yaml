name: Raspberry Pi Flatpak

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-on-pi:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [[self-hosted, linux, ARM64, pi-4]]
        name: [synergy]
        include:
          - name: synergy
            remote_folder: v1-core-standard
            enterprise: ""
            business: ""
    env:
      GIT_COMMIT: ${{ github.sha }}
      DEB_BUILD_OPTIONS: parallel=1
      SYNERGY_ENTERPRISE: ${{ matrix.enterprise }}
      SYNERGY_BUSINESS: ${{ matrix.business }}

    steps:
    - uses: actions/checkout@v2

    - name: Version Info
      id: version
      run: |
        python3 CI/build_version.py
        mkdir -p version-info && cd version-info && cmake .. && cd ..
        . ./version-info/version
        rm -rf version-info
        SYNERGY_VERSION="$SYNERGY_VERSION_MAJOR.$SYNERGY_VERSION_MINOR.$SYNERGY_VERSION_PATCH"
        SYNERGY_REVISION=$(git rev-parse --short=8 HEAD)
        SYNERGY_DEB_VERSION="${SYNERGY_VERSION}.${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}"
        echo "::set-output name=SYNERGY_VERSION_MAJOR::${SYNERGY_VERSION_MAJOR}"
        echo "::set-output name=SYNERGY_VERSION_MINOR::${SYNERGY_VERSION_MINOR}"
        echo "::set-output name=SYNERGY_VERSION_PATCH::${SYNERGY_VERSION_PATCH}"
        echo "::set-output name=SYNERGY_VERSION_STAGE::${SYNERGY_VERSION_STAGE}"
        echo "::set-output name=SYNERGY_VERSION_BUILD::${SYNERGY_VERSION_BUILD}"
        echo "::set-output name=SYNERGY_VERSION::${SYNERGY_VERSION}"
        echo "::set-output name=SYNERGY_REVISION::${SYNERGY_REVISION}"
        echo "::set-output name=SYNERGY_DEB_VERSION::${SYNERGY_DEB_VERSION}"
        echo "::set-output name=SYNERGY_REMOTE_FOLDER::${{ matrix.remote_folder }}/${SYNERGY_VERSION}/${SYNERGY_VERSION_STAGE}/b${SYNERGY_VERSION_BUILD}-${SYNERGY_REVISION}"
        echo "::set-output name=SYNERGY_PACKAGE_NAME::${{ matrix.name }}"

    - name: Install flatpak
      run: |
        sudo apt-get update
        echo "Update Done"
        sudo apt-get install flatpak
        echo "Flatpak install Done"
        sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        echo "Flatpak remote add flathub"
        sudo flatpak install org.kde.Platform//5.15-21.08
        echo "Flatpak install Platform done"
        sudo flatpak install org.kde.Sdk//5.15-21.08
        echo "Flatpak install SDK done"
        sudo flatpak install flatpak-builder
        echo "Flatpak install flatpak-builder done"

    - name: Build
      run: | 
        cd flatpak
        flatpak-builder build com.symless.Synergy.yml --disable-cache --force-clean
        flatpak build-finish build
        mv com.symless.Synergy.desktop ./build/files/share/applications/com.symless.Synergy.desktop
        flatpak build-export export build
        flatpak build-bundle export synergy.flatpak com.symless.Synergy master --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo

    # - name: Send package to Binary Storage
    #   if: "github.event_name == 'release'"
    #   uses: garygrossgarten/github-action-scp@v0.7.3
    #   with:
    #     local: "${{ github.workspace }}/package/"
    #     remote: "${{ secrets.BINARIES_SSH_DIR }}/${{ steps.version.outputs.SYNERGY_REMOTE_FOLDER }}/"
    #     host: ${{ secrets.BINARIES_SSH_HOST }}
    #     username: ${{ secrets.BINARIES_SSH_USER }}
    #     privateKey: ${{ secrets.BINARIES_SSH_KEY }}
