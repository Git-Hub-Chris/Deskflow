name: "SonarCloud Analysis"

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches: [master]

concurrency:
  group: "${{ github.workflow }}-${{ github.ref || github.run_id }}"
  cancel-in-progress: true

jobs:
  sonarcloud-analysis:
    if: ${{ vars.SONAR_SCANNER_ENABLED }}

    runs-on: ubuntu-24.04-32-core-x64
    container: symless/synergy-core:ubuntu-22.04-amd64
    timeout-minutes: 20

    env:
      SONAR_SCANNER_VERSION: 6.1.0.4477
      SONAR_SCANNER_OPTS: -server
      SONAR_SCANNER_URL_BASE: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli
      CPU_CORE_COUNT: 32

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

          # Fetch all history for SonarScanner blame data
          fetch-depth: 0

      - name: Config Git safe dir
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Install dependencies
        run: |
          ./scripts/install_deps.py --ci-env &&
          apt install curl unzip -y &&
          pip install gcovr

      - name: Install SonarScanner
        run: |
          export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux-x64
          curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip \
            $SONAR_SCANNER_URL_BASE/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux-x64.zip
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/

      - name: Install build-wrapper
        run: |
          curl --create-dirs -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/

      - name: Configure
        run: cmake -B build --preset=linux-debug -DENABLE_COVERAGE=ON

      - name: Build
        run: |
          export PATH=$HOME/.sonar/build-wrapper-linux-x86:$PATH
          build-wrapper-linux-x86-64 --out-dir bw-output cmake --build build -j${CPU_CORE_COUNT}

      - name: Unit tests coverage
        env:
          QT_QPA_PLATFORM: offscreen
        run: cmake --build build --target unittests-coverage

      - name: Integration tests coverage
        id: integtests-coverage
        env:
          QT_QPA_PLATFORM: offscreen
        run: cmake --build build --target integtests-coverage
        continue-on-error: true

      - name: Get coverage report paths
        id: coverage-paths
        run: |
          unittests=$(find build -name unittests-coverage.xml)
          integtests=$(find build -name integtests-coverage.xml)
          paths="${unittests}${integtests:+,$integtests}"
          if [ -z "$paths" ]; then
            echo "Error: No coverage files found"
            exit 1
          fi
          echo "csv=$paths" >> $GITHUB_OUTPUT

      - name: Run SonarScanner
        run: |
          export PATH=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux-x64/bin:$PATH
          cd build
          sonar-scanner \
            -Dsonar.organization=symless \
            -Dsonar.projectKey=symless_synergy-core \
            -Dsonar.sources=. \
            -Dsonar.projectBaseDir=../ \
            -Dsonar.exclusions=ext/**,build/** \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverageReportPaths=${{ steps.coverage-paths.outputs.csv }} \
            -Dsonar.cfamily.threads=${{ env.CPU_CORE_COUNT }}
            -Dsonar.python.version=3.10
            -Dsonar.cfamily.compile-commands=build/compile_commands.json
        env:
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
